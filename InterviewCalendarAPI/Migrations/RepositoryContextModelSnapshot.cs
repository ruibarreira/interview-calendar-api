// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InterviewCalendarAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration")
                        .HasColumnType("datetime2");

                    b.HasKey("CandidateId");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            CandidateId = 1,
                            LastUpdateRegistration = new DateTime(2021, 7, 24, 20, 31, 17, 955, DateTimeKind.Utc).AddTicks(3555),
                            Name = "John",
                            Registration = new DateTime(2021, 7, 24, 20, 31, 17, 955, DateTimeKind.Utc).AddTicks(3361)
                        });
                });

            modelBuilder.Entity("Entities.Models.Interviewer", b =>
                {
                    b.Property<int>("InterviewerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration")
                        .HasColumnType("datetime2");

                    b.HasKey("InterviewerId");

                    b.ToTable("Interviewers");

                    b.HasData(
                        new
                        {
                            InterviewerId = 1,
                            LastUpdateRegistration = new DateTime(2021, 7, 24, 20, 31, 17, 956, DateTimeKind.Utc).AddTicks(2484),
                            Name = "Mary",
                            Registration = new DateTime(2021, 7, 24, 20, 31, 17, 956, DateTimeKind.Utc).AddTicks(2307)
                        },
                        new
                        {
                            InterviewerId = 2,
                            LastUpdateRegistration = new DateTime(2021, 7, 24, 20, 31, 17, 956, DateTimeKind.Utc).AddTicks(2778),
                            Name = "Diana",
                            Registration = new DateTime(2021, 7, 24, 20, 31, 17, 956, DateTimeKind.Utc).AddTicks(2777)
                        });
                });

            modelBuilder.Entity("Entities.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeSlotEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeSlotStart")
                        .HasColumnType("datetime2");

                    b.HasKey("TimeSlotId");

                    b.HasIndex("TimeSlotStart", "TimeSlotEnd")
                        .IsUnique();

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("Entities.Models.TimeSlotAvailability", b =>
                {
                    b.Property<int>("TimeSlotAvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registration")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.HasKey("TimeSlotAvailabilityId");

                    b.HasIndex("InterviewerId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("TimeSlotAvailabilities");
                });

            modelBuilder.Entity("Entities.Models.TimeSlotRequest", b =>
                {
                    b.Property<int>("TimeSlotRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateRegistration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Registration")
                        .HasColumnType("datetime2");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.HasKey("TimeSlotRequestId");

                    b.HasIndex("CandidateId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("TimeSlotRequests");
                });

            modelBuilder.Entity("Entities.Models.TimeSlotAvailability", b =>
                {
                    b.HasOne("Entities.Models.Interviewer", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interviewer");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("Entities.Models.TimeSlotRequest", b =>
                {
                    b.HasOne("Entities.Models.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("TimeSlot");
                });
#pragma warning restore 612, 618
        }
    }
}
